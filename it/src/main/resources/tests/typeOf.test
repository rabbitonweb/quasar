{
    "name": "use type_of function",
    "backends": {
        "couchbase":      "pending",
        "mimir":"pendingIgnoreFieldOrder"
    },
    "data": "nested_foo.data",
    "query": "select foo, type_of(foo) as type from nested_foo",
    "predicate": "exactly",
    "ignoreResultOrder": true,
    "FIXME": "There should be three `{ }`, but they are rewritten away",
    "expected": [{ "foo": "zap",                            "type": "array" },
                 { "foo": [15, [{ "baz": ["quux"] }]],      "type": "array" },
                 { "foo": ["15z", [{ "baz": ["qx"] }]],     "type": "array" },
                 { "foo": [18, ["meh", { "baz": ["qx"] }]], "type": "array" },
                 { "foo": [16, [{ "baz": "mooooo" }]],      "type": "array" },
                 { "foo": { "bar": 15, "baz": ["qx"] },     "type": "map"   },
                 { "foo": { "bar": "a15", "baz": ["qx"] },  "type": "map"   },
                 { "foo": [17, [{ "baz": ["qx"] }]],        "type": "array" }]
}
